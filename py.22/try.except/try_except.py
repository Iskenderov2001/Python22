# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
# Operator: Try...except

# –û—à–∏–±–∫–∏ -> —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–¥–æ–º:
# Syntax Error
# IndentationError
#    if a > 0
    # print(a)
# TypeError
# –ò—Å–∫–ª—é—á–µ–Ω–∏–µ -> Invalid values
# ZeroDivisionError
# ArithmeticError
# NameError
# KeyError
# ValueError
# ImportError
# BaseException #–ü—Ä–æ—Ä–æ–¥–∏—Ç–µ–ª—å –≤—Å–µ—Ö –æ—à–∏–±–æ–∫

# Try...except
# try:
#     <exprssion>
# except <Exception>:
#     <bode>
# <else>: –ï—Å–ª–∏ –≤—Å—ë –æ–∫
#     <body>
# <finally>: –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∫–æ–Ω—Ü–µ.
#     <body>

# print(dir(__builtins__))

# num1 = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
# print(num1)
# print('Ochen\' vajnaia strochka koda! ')


# try:
#     num1 = int(input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: '))
#     print(num1)
# except:
#     print('Invalid Value, try again!')

# print

# print('Ochen\' vajnaia strochka koda! ')

# –°–ø–æ—Å–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫—É
# 1. import sys

# ls = [1, 2, 3, 4, 5,]

# try:
#     index = int(input('Vvedite oshibku index: '))
#     print(ls[index])
# except:
#     import sys
#     print(f'oops, we catched {sys.exe_info() [0]} error! ')

# 2. Exception as e 

# while True:
#     try:
#         index = int(input('Vvedite oshibku index: '))
#         print(ls[index])
#     except Exception as e:
#         print(f'oops, we catched {e.__class__} error! ')


# try:
#     num1 = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!: "))
#     num2 = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ 2: "))
#     result = num1 / num2
# except ValueError:
#     print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ! ')
# except ZeroDivisionError:
#     print('Na 0 delit nelzia!!! ')
# else:
#     print('Result of division', result)
# finally:
#     print('The end')


# """
# 2) –°–æ–∑–¥–∞–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∞–º–∏ –±—É–¥—É—Ç –∏–º–µ–Ω–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ - –¥—Ä—É–≥–æ–π —Å–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–ª—é—á–∏ - –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –∞ –∑–Ω–∞—á–µ–Ω–∏—è - –±–∞–ª–ª—ã –∑–∞ –ø—Ä–µ–¥–º–µ—Ç –¥–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞. –î–∞–ª–µ–µ —Å –ø–æ–º–æ—â—å—é dictionary comprehension –æ–±–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç —Å–ª–æ–≤–∞—Ä—å, –ø—Ä–∏—Å–≤–æ–∏–≤ –ø–æ 2 —ç–∫—Å—Ç—Ä–∞ –±–∞–ª–ª–∞ –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É.
# –ù–∞–ø—Ä–∏–º–µ—Ä: 

# –†–µ–∑—É–ª—å—Ç–∞—Ç:
# {'Sam': {'math': 97, 'literature': 90}, 'Alice': {'math': 72, 'literature': 100}}
# """

# a = {'Sam': {'math': 95, 'literature': 88}, 'Alice': {'math': 70, 'literature': 98}}
# dict_ = {key: {k: v+2 for k, v in value.items()} for key, value in a.items()}
# print(dict_)

# new_dict = {
#     inner_key: x
#     for inner_key, inner_value in dict_.items()
#     for x outher_value in inner_value.items()
#     if max(inner_value.values()) == inner_value[x]
# }
# print(dict_)


# list_ = ['1','2','3']
# a = list_[0]
# b = list_[1]
# c = list_[2]
# if a == b or b == c or a == c:
#     print('yes')
# else:
#     print('ERROR')

# list_ = ['1','2','3']
# if list_[0] == list_[1] or list_[0] == list_[2] or list_[1] == list_[2]:
#     print('yes')
# else:
#     print('ERORR')
# –ó–∞–ø–∏—Å–∞—Ç—å –≤ —Å–ø–∏—Å–æ–∫ list_ –≤—Å–µ —á–∏—Å–ª–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 54 –¥–æ 9184 –¥–µ–ª—è—â–∏–µ—Å—è –Ω–∞ 5 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞.
# –†–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
# list_ = []

# import random
# ls = []
# for x in range(0, 10):
#     ls.append(random.randint(0, 1000))
# ls.sort(reverse=False)
# print(ls)
# print(len(ls))
# for x in range(54,9184):
#     if x % 5 == 0:
#         list_.append(x)
# print(list_)

# """
# 2) –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ —Å–ø–∏—Å–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–∞–º —Å–ø–∏—Å–æ–∫ —ç—Ç–∏—Ö —á–∏—Å–µ–ª –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è.
# """

# # import random
# # ls = []
# # for x in range(0, 10):
# #     ls.append(random.randint(10, 1000))
# # ls.sort(reverse=False)
# # print(ls)
# """
# 3) –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞–º–∏, –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∏–∑–º–µ—Ä—è–µ—Ç –¥–ª–∏–Ω—É –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥—Ä—É–≥–æ–π —Å–ø–∏—Å–æ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä, —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ ‚Äì ['yes', 'no', 'maybe', 'ok', 'what'], —Å–ø–∏—Å–æ–∫ –¥–ª–∏–Ω ‚Äì [3, 2, 5, 2, 4]. –û–±–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–ª–∂–Ω—ã –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω.
# """




# # ls = input()
# # ls1 = ls.split(',')
# # ls3 = []
# # for x in ls1:
# #     ls3.append(len(x))
# # print(ls1)
# # print(ls3)
    

# # print(ls2)



# # for x in ls:
    

# # print(ls)
# # print(len(ls))
# # print(ls1)

# # print(len(ls.count))

# """
# 1) –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —Å –≤–≤–æ–¥–∞ —Å–µ–º—å —á–∏—Å–µ–ª —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ —Å–ø–∏—Å–æ–∫. –ù–∞ —ç–∫—Ä–∞–Ω –≤—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–≤–æ–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ —Å–ø–∏—Å–∫–∞. –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ —á–∏—Å–ª–æ –∏ –≤–º–µ—Å—Ç–æ –Ω–µ–≥–æ –≤—Å—Ç–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–æ ‚ÄúMakers‚Äù.
# –ù–∞–ø—Ä–∏–º–µ—Ä: 
# –í–≤–æ–¥: –í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: 5, 7, 8, 1, 3, 0, 8
# –í—ã–≤–æ–¥: 5 8
# [5, 7, 8, 1, 3, 0, ‚ÄòMakers‚Äô]
# """
# # a = input()
# # b = []
# # b.append(a)
# # print(b)



# # a = int(input())
# # ls = (a)
# # ls.pop(-1)
# # print(f"{ls} 'Makers'" )


# """"
# –û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é count, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–≤–Ω–æ 0
# –ò–∑ –≤–∫–ª–∞–¥–∫–∏ INPUT –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é number –ø–æ–ø–∞–¥–∞–µ—Ç —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑ —á–∏—Å–ª–∞.
# –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–æ–∫—É –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π number. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ number —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–∏—Å–ª–∞, —Ç–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –¥–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ–≤–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø–∏—à–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ count.
# –†–∞—Å–ø–µ—á–∞—Ç–∞–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ count.
# """


# # count = 0
# # number = input()
# # for x in number:
    
# #     if x.isdigit():

# #         number = int(number)
# #         count = count + 1
# # print(count)

# # count = 0
# # number = input()
# # number.isdigit()
# # count = number
# # print(count)
# """
# 3) –ù–∞–ø–∏—à–∏—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—É –ö–∞–º–µ–Ω—å-–ù–æ–∂–Ω–∏—Ü—ã-–ë—É–º–∞–≥–∞. –í—ã –∏–≥—Ä–∞–µ—Ç–µ —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å random.

# –ù–∞–ø—Ä–∏–º–µ—Ä:
# –í–≤–æ–¥: –í–∞—à –≤—ã–±–æ—Ä: –ö–∞–º–µ–Ω—å
# –í—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: –ù–æ–∂–Ω–∏—Ü—ã
# –í—ã–≤–æ–¥: –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!

# –í–≤–æ–¥: –í–∞—à –≤—ã–±–æ—Ä: –ë—É–º–∞–≥–∞
# –í—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞: –ù–æ–∂–Ω–∏—Ü—ã
# –í—ã–≤–æ–¥: –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!
# """

# import random
# comp = random.randint(1, 4)
# comp = random.randint(1, 4)
# user = int(input)

# if user and comp == 1:
#     print("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ö–ê–ú–ï–ù–¨")
# if user and comp == 2:
#     print("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ë–£–ú–ê–ì–£")
# if user and comp == 3:
#     print("–í—ã –≤—ã–±—Ä–∞–ª–∏ –ù–û–ñ–ù–ò–¶–£")






# HANGMAN = (
# """
# """,

# """1-STEP
# _______
# """,
# """2-STEP
#        |
#        |
#        |
#        |
#        |     
#        |     
#        | 
# _______| 
# """,
# """3-STEP
# ________
#    |   |
#        |
#        |
#        |
#        |          
#        |
#        | 
# _______| 
# """,
# """4-STEP
#  _______
#    |   |
#    0   |
#   /X\  |
#   / \  |
#        |     
#        |     
#        |
# _______|  
# """,
# """–ñ–ê–õ–¨
#  _______
#        |
#    0   |
#   |X|  |
#   / \  |
#        |     
#        |     
#        | 
# _______|
# """
# )
# while True:
    # max_wrong = len(HANGMAN) - 1
    # words = {"KUTMAN":"\n‚úÆ‚úÆ‚úÆ‚úÆ‚úÆ‚úÆThe Best student in the group –ü–∏—Ç–æ–Ω–æ–≤–∞—è –¥–æ–ª–∏–Ω–∞...",
    #          "DANIYAL":"\n‚òÑÔ∏è‚òÑÔ∏è‚òÑÔ∏è‚òÑÔ∏è‚òÑÔ∏è‚òÑÔ∏èFireman of the second week..." ,
    #          "MAKERS" :"\n‚ë†‚ë†‚ë†‚ë†‚ë†First bootcamp in Bishkek...",
    #          "SANZHAR":"\nüë®‚Äçüíªüë®‚Äçüíªüë®‚Äçüíªüë®‚ÄçüíªThe best curator on Makers ",
    #          "KASYM":"\n‚ôî‚ôî‚ôî‚ôîPresident of Kazahstan",
    #          "–ë–ò–®–ö–ï–ö":"\nStolitsa Kyrgyzstana"
    #         }
    # import random
    # key = random.choice(list(words.keys()))
    # length = "*"*len(key)
    # wrong = 0
    # used = []
    # while wrong<max_wrong and length!=key:
    #     print(">>>–í–æ—Ç —Ç–µ–±–µ –Ω–µ–±–æ–ª—å—à–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞:\n",words[key])
    #     print(HANGMAN[wrong])
    #     print('''>>>–í—ã —É–∂–µ –ø—Ä–µ–¥–ª–∞–≥–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –±—É–∫–≤—ã: ''',used)
    #     print(">>>–û—Ç–≥–∞–¥–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –≤ —Å–ª–æ–≤–µ —Å–µ–π—á–∞—Å –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: ",length,"\n")
    #     guess1 = input("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É: ")
    #     guess = guess1.upper()
    #     while guess in used:
    #         guess = input("–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é –±—É–∫–≤—É: ")
    #         guess = guess.upper()
    #     used.append(guess)
    #     if guess in key:
    #         print("–ú–æ–ª–æ–¥–µ—Ü! –ë—É–∫–≤–∞ ",guess," –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ!")
    #         new = ""
    #         for i in range(len(key)):
    #             if guess == key[i]:
    #                 new += guess
    #             else:
    #                 new += length[i]
    #         length = new
    #     else:
    #         print("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –±—É–∫–≤—ã ",guess," –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ.")
    #         wrong += 1
    # if wrong == max_wrong:
    #     print("–í–∞—Å –ø–æ–≤–µ—Å–∏–ª–∏ ‡ºí ")
    #     print(HANGMAN[wrong])
    # else:
    #     print("\n\n\n–£—Ä–∞! –£ —Ç–µ–±—è –ø–æ–ª—É—á–∏–ª–æ—Å—å!")
    # print("–í—ã –ø—Ä–µ–¥–ª–∞–≥–∞–ª–∏ —Å–ª–µ–¥—É—é—â–∏–µ –±—É–∫–≤—ã: ",used)
    # print("–û—Ç–≥–∞–¥–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –≤ —Å–ª–æ–≤–µ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: ",length,"\n")
    
    # play_again = input("–°—ã–≥—Ä–∞–µ–º –µ—â–µ? (y/n): ") 
    # if play_again.lower() != "y": 
    #     break





# print(dict_)

# dict1 = dict.values('Emil': 'Aiana','Alia','Janat','Aijamal','Bermet')

dict_ = dict.fromkeys(('Alia','Janat','Aiana','Bermet'),'Emilbek')
dict_ = {key + 'Pidor': len(key) for key, val in dict_.items()}
dict_.update({'except':'Exception'})
print(dict_)

while True:
    key = input("")
    dict_[key] += 2
    print(dict_)